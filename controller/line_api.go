package controller

import (
	"log"
	"net/http"
	"strings"

	"bytes"

	"os"

	"encoding/json"

	"fmt"

	"github.com/gin-gonic/gin"
	"github.com/shimokp/takizawa-garbage-bot/model"
)

func CallbackHandler(c *gin.Context) {

	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

	bufbody := new(bytes.Buffer)
	bufbody.ReadFrom(c.Request.Body)
	defer c.Request.Body.Close()
	log.Println(bufbody.String())

	var message = model.MessageText{}
	json.Unmarshal(bufbody.Bytes(), &message)

	s := fmt.Sprintf("{\"text\" : \" ``` %s ``` \"}", message)

	body := strings.NewReader(s)

	url := os.Getenv("SlackToMe")
	log.Println("URL: ", url)
	req, err := http.NewRequest("POST", url, body)
	if err != nil {
		log.Println(err)
	}
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		log.Println(err)
	}
	log.Println("Slack Responce Status: ", resp.Status)

	bufbody.ReadFrom(resp.Body)
	log.Println("Slack Responce: ", bufbody.String())
	defer resp.Body.Close()

	c.JSON(http.StatusOK, gin.H{
		"message": s,
	})
}
