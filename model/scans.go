// DON'T EDIT *** generated by scaneo *** DON'T EDIT //

package model

import "database/sql"

func ScanHoge(r *sql.Row) (Hoge, error) {
	var s Hoge
	if err := r.Scan(
		&s.Month,
		&s.Day,
	); err != nil {
		return Hoge{}, err
	}
	return s, nil
}

func ScanHoges(rs *sql.Rows) ([]Hoge, error) {
	structs := make([]Hoge, 0, 16)
	var err error
	for rs.Next() {
		var s Hoge
		if err = rs.Scan(
			&s.Month,
			&s.Day,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanMessageText(r *sql.Row) (MessageText, error) {
	var s MessageText
	if err := r.Scan(
		&s.Events,
	); err != nil {
		return MessageText{}, err
	}
	return s, nil
}

func ScanMessageTexts(rs *sql.Rows) ([]MessageText, error) {
	structs := make([]MessageText, 0, 16)
	var err error
	for rs.Next() {
		var s MessageText
		if err = rs.Scan(
			&s.Events,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanEvent(r *sql.Row) (Event, error) {
	var s Event
	if err := r.Scan(
		&s.ReplyToken,
		&s.Type,
		&s.Timestamp,
	); err != nil {
		return Event{}, err
	}
	return s, nil
}

func ScanEvents(rs *sql.Rows) ([]Event, error) {
	structs := make([]Event, 0, 16)
	var err error
	for rs.Next() {
		var s Event
		if err = rs.Scan(
			&s.ReplyToken,
			&s.Type,
			&s.Timestamp,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanUser(r *sql.Row) (User, error) {
	var s User
	if err := r.Scan(
		&s.ID,
		&s.UserID,
		&s.Region,
		&s.Created,
	); err != nil {
		return User{}, err
	}
	return s, nil
}

func ScanUsers(rs *sql.Rows) ([]User, error) {
	structs := make([]User, 0, 16)
	var err error
	for rs.Next() {
		var s User
		if err = rs.Scan(
			&s.ID,
			&s.UserID,
			&s.Region,
			&s.Created,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

